name: build-nightly-docker

on:
  # trigger the workflow on pushes within listed paths to the main branch
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'Dockerfile'
  #     - 'src/**'
  # trigger the workflow on pull requests within listed paths to the main branch
  # pull_request:
  #   branches: [ master ]
  #   paths:
  #     - 'Dockerfile'
  #     - 'src/**'
  # nightly builds at 8am UTC
  schedule:
    - cron: '0 8 * * *'
  # allows this workflow to be ran triggered manually from the actions tab
  workflow_dispatch:


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     platform: [linux/amd64, linux/arm64, linux/arm/v7]
    # env:
    #   DOCKERHUB_REPO: ${{ vars.DOCKERHUB_REPO }}
    # permissions:
    #   contents: read
    #   packages: write
    #   id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Git Hash
        run: |
          GIT_HASH="$(git rev-parse --short HEAD)"
          echo "GIT_HASH=${GIT_HASH}" >> $GITHUB_ENV

      - name: Get current image digest (if exists)
        id: get_digest
        run: |
          # Try to pull the latest image and get its digest
          IMAGE_NAME="${{ vars.DOCKERHUB_REPOSITORY }}:latest"
          CURRENT_DIGEST=$(docker pull $IMAGE_NAME 2>/dev/null && docker inspect --format='{{.Digest}}' $IMAGE_NAME || echo "")
          echo "current_digest=$CURRENT_DIGEST" >> $GITHUB_OUTPUT

      - name: Build Docker image
        id: build_image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false # Do not push yet
          tags: ${{ vars.DOCKERHUB_REPOSITORY }}:temp_build # Temporary tag for comparison
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max

      - name: Get new image digest
        id: new_digest
        run: |
          IMAGE_NAME="${{ vars.DOCKERHUB_REPOSITORY }}:temp_build"
          NEW_DIGEST=$(docker inspect --format='{{.Digest}}' $IMAGE_NAME)
          echo "new_digest=$NEW_DIGEST" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        if: steps.get_digest.outputs.current_digest != steps.new_digest.outputs.new_digest
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.get_digest.outputs.current_digest != steps.new_digest.outputs.new_digest
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,scope=${{ github.workflow }},mode=max
          tags: |
            ${{ vars.DOCKERHUB_REPOSITORY }}:latest
            ${{ vars.DOCKERHUB_REPOSITORY }}:nightly-${{ github.sha }}
